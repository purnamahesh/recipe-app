{"version":3,"sources":["components/Recipe.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Recepie","title","image","calories","ingredients","className","src","alt","id","map","ing","index","text","Navbar","updateQuery","useState","search","setSearch","type","placeholder","value","onChange","e","target","onClick","preventDefault","console","log","App","recipes","setRecipes","query","setquery","useEffect","getRecipes","a","fetch","process","res","json","data","hits","q","rec","Recipe","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAsBeA,EApBC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvC,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,eAAeC,IAAKJ,EAAOK,IAAKN,EAAOO,GAAG,YACzD,sBAAKH,UAAU,YAAf,UACI,oBAAIA,UAAU,8BAAd,SAA6CJ,IAC7C,qBAAII,UAAU,YAAd,uBAAqCF,KACrC,6CACA,6BACKC,EAAYK,KAAI,SAACC,EAAKC,GAAN,OACb,6BAAiBD,EAAIE,MAAZD,iBCXtB,SAASE,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,YAC7B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACI,sBAAKZ,UAAU,gBAAf,UACI,oBAAIA,UAAU,eAAd,wBACA,sBAAKA,UAAU,SAAf,UACI,uBAAOG,GAAG,aAAaH,UAAU,oBAAoBa,KAAK,SAASC,YAAY,gBAAgBC,MAAOJ,EAAQK,SAAU,SAAAC,GAAC,OAAIL,EAAUK,EAAEC,OAAOH,UAChJ,wBAAQZ,GAAG,gBAAgBH,UAAU,mBAAmBmB,QAVlD,SAAAF,GACdA,EAAEG,iBACFC,QAAQC,IAAI,GACZb,EAAYE,IAOJ,0BC6BDY,MAvCf,WACE,MAA8Bb,mBAAS,IAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KACA,EAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACRC,IACAR,QAAQC,IAAI,OACX,CAACI,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACCC,MAAM,mCAAD,OAAoCL,EAApC,mBAAoDM,WAApD,oBAAwFA,qCAD9F,cACXC,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGjBV,EAAWU,EAAKC,MAHC,2CAAH,qDAWhB,OACE,qBAAKpC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACQ,EAAD,CAAQC,YARM,SAAC4B,GACnBV,EAASU,GACThB,QAAQC,IAAI,MAOR,qBAAKtB,UAAU,MAAf,SACGwB,EAAQpB,KAAI,SAAAkC,GAAG,OACd,cAACC,EAAD,CAEE3C,MAAO0C,EAAIE,OAAOC,MAClB5C,MAAOyC,EAAIE,OAAO3C,MAClBC,SAAUwC,EAAIE,OAAO1C,SACrBC,YAAauC,EAAIE,OAAOzC,aAJnBuC,EAAIE,OAAO1C,qBClBf4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77521e2a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Recepie = ({ title, image, calories, ingredients }) => {\r\n    return (\r\n        <div className=\"col-md-6 col-sm-12\">\r\n            <div className=\"card m-4\">\r\n                <img className=\"card-img-top\" src={image} alt={title} id=\"rec-img\" />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title font-weight-bold\">{title}</h3>\r\n                    <h5 className=\"card-text\">Calories: {calories}</h5>\r\n                    <h3>Ingredients</h3>\r\n                    <ol>\r\n                        {ingredients.map((ing, index) => (\r\n                            <li key={index}>{ing.text}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recepie;","import React, { useState } from 'react'\r\n\r\nexport default function Navbar({ updateQuery }) {\r\n    const [search, setSearch] = useState(\"\")\r\n    const getSearch = e => {\r\n        e.preventDefault()\r\n        console.log(1)\r\n        updateQuery(search)\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar\">\r\n            <h2 className=\"navbar-brand\">Recipe App</h2>\r\n            <div className=\"d-flex\">\r\n                <input id=\"search-bar\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search Recipe\" value={search} onChange={e => setSearch(e.target.value)} />\r\n                <button id=\"search-button\" className=\"btn btn btn-dark\" onClick={getSearch}>Search</button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\nimport Recipe from './components/Recipe'\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  const [recipes, setRecipes] = useState([])\n  const [query, setquery] = useState('')\n  useEffect(() => {\n    getRecipes()\n    console.log(\"3\")\n  }, [query]);\n\n  const getRecipes = async () => {\n    const res = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_KEY}`)\n    const data = await res.json()\n    setRecipes(data.hits)\n  }\n\n  const updateQuery = (q) => {\n    setquery(q)\n    console.log(2)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Navbar updateQuery={updateQuery} />\n        <div className=\"row\">\n          {recipes.map(rec => (\n            <Recipe\n              key={rec.recipe.calories}\n              title={rec.recipe.label}\n              image={rec.recipe.image}\n              calories={rec.recipe.calories}\n              ingredients={rec.recipe.ingredients}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}